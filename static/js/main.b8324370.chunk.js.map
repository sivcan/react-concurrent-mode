{"version":3,"sources":["constants/constants.js","services/DotaService.js","components/HeroSkeletonLoader.js","constants/delays.js","components/HeroTile.js","react-concurrent/components/HeroesList.js","services/ReactCache.js","react-concurrent/ConcurrentApp.js","react-synchronous/components/HeroSkeletonLoader.js","react-synchronous/components/Hero.js","react-synchronous/components/HeroesList.js","react-synchronous/SynchronousApp.js","components/Spinner.js","components/Pagination.js","components/Toggle.js","index.js","assets/logo.svg"],"names":["module","exports","LIST_ITEMS_COUNT","SYNC","CONCURRENT","getLimits","low","heroesData","heroes","id","high","count","getHero","opts","JSON","parse","delay","Promise","resolve","setTimeout","find","hero","HeroSkeletonLoader","Array","map","_","idx","key","className","DELAYS","HERO_1","HERO_2","HERO_3","HERO_4","TRANSITION_TIMEOUT","HeroTile","src","url_full_portrait","alt","localized_name","HeroesList","props","fallback","Hero","APIResource","cb","resource","unstable_createResource","read","dataObject","stringify","createResource","ConcurrentApp","pagination","useState","setHero","useEffect","isSubscribed","then","ReactDOM","flushSync","SynchronousApp","Spinner","Pagination","onClick","limits","constants","onChange","width","xmlns","data-name","viewBox","x","y","style","fill","d","transform","isPending","Toggle","modes","setModes","handleMode","mode","getCheckboxClass","classnames","bind","this","root","document","getElementById","createRoot","render","setPagination","useTransition","timeoutMs","startTransition","logo"],"mappings":"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","file":"static/js/main.b8324370.chunk.js","sourcesContent":["const CONSTANTS = {\n  LIST_ITEMS_COUNT: 4,\n  SYNC: 'sync',\n  CONCURRENT: 'concurrent'\n};\n\nmodule.exports = CONSTANTS;","import heroesData from './data.json';\n\nexport function getLimits () {\n  return {\n    low: heroesData.heroes[0].id,\n    high: heroesData.count\n  };\n}\n\nexport function getData (min, max, delay = 0) {\n  min = Math.max(0, min);\n  max = Math.min(max, heroesData.count);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(heroesData.heroes.slice(min, max));\n    }, Math.max(delay, 0));\n  });\n}\n\nexport function getHero (opts) {\n  // Data comes in the stringified format\n  // because it's taking the benefit of react-cache for the cache hit\n  let { id, delay = 0 } = JSON.parse(opts);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(heroesData.heroes.find((hero) => hero.id === id));\n    }, delay);\n  });\n}\n","import React from 'react';\nimport { LIST_ITEMS_COUNT } from '../constants/constants';\n\nexport default function HeroSkeletonLoader () {\n  return (\n    <>\n    {\n      [...new Array(LIST_ITEMS_COUNT)].map((_, idx) => {\n        return (\n          <div\n            key={`skeleton-${idx}`}\n            className='hero-skeleton'\n          >\n            <div className='hero-skeleton-thumbnail'/>\n            <div className='hero-skeleton-title' />\n          </div>\n        );\n      })\n    }\n    </>\n  );\n}\n","const DELAYS = {\n  HERO_1: 1100,\n  HERO_2: 100,\n  HERO_3: 1800,\n  HERO_4: 600,\n  TRANSITION_TIMEOUT: 1000\n};\n\nexport default DELAYS;\n","import React from 'react';\n\nexport default function HeroTile ({ hero }) {\n  return (\n    <div className='hero'>\n      <img \n        className='hero-thumbnail'\n        src={hero.url_full_portrait}\n        alt={hero.localized_name}\n      />\n      <div className='hero-title'>\n        {hero.localized_name}\n      </div>\n    </div>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { getHero } from '../../services/DotaService';\nimport HeroSkeletonLoader from '../../components/HeroSkeletonLoader';\nimport { createResource } from '../../services/ReactCache';\nimport DELAYS from '../../constants/delays';\nimport HeroTile from '../../components/HeroTile';\n\nexport default function HeroesList (props) {\n  return (\n    <div className='container'>\n      <div className='hero-list'>\n        <Suspense fallback={<HeroSkeletonLoader />}>\n          <Hero\n            id={props.low}\n            delay={DELAYS.HERO_1}\n          />\n          <Hero\n            id={props.low + 1}\n            delay={DELAYS.HERO_2}\n          />\n          <Hero\n            id={props.low + 2}\n            delay={DELAYS.HERO_3}\n          />\n          <Hero\n            id={props.low + 3}\n            delay={DELAYS.HERO_4}\n          />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\n// Create a resource for react-cache\nconst APIResource = createResource(getHero);\n\nfunction Hero (props) {\n  // Read from the resource.\n  // Internally, it returns a promise.\n  // It determines if it's a cache-hit / fetches in case of a cache-miss\n  const hero = APIResource.read({ id: props.id, delay: props.delay });\n\n  return <HeroTile hero={hero} />;\n}\n","import { unstable_createResource } from 'react-cache';\n\nexport const createResource = (cb) => {\n  const resource = unstable_createResource(cb);\n\n  return {\n    read (dataObject) {\n      // Need to stringify the object, so that the benefit of react-cache\n      // is taken into account\n      return resource.read(JSON.stringify(dataObject));\n    }\n  }\n}","import React from 'react';\nimport HeroesList from './components/HeroesList';\n\nfunction ConcurrentApp (props) {\n  return (\n    <div className=\"App\">\n      <div className=\"App-title\">\n        Concurrent Mode\n      </div>\n      <HeroesList\n        low={props.pagination.low}\n        high={props.pagination.high}\n      />\n    </div>\n  );\n}\n\nexport default ConcurrentApp;\n","import React from 'react';\n\nexport default function HeroSkeletonLoader () {\n  return (\n    <div className='hero-skeleton'>\n      <div className='hero-skeleton-thumbnail'/>\n      <div className='hero-skeleton-title' />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { getHero } from '../../services/DotaService';\nimport HeroSkeletonLoader from './HeroSkeletonLoader';\nimport HeroTile from '../../components/HeroTile';\n\nexport default function Hero (props) {\n  const [hero, setHero] = useState({});\n\n  // Fetch the hero\n  useEffect(() => {\n    let isSubscribed = true,\n      opts = JSON.stringify({ id: props.id, delay: props.delay });\n\n    setHero({});\n\n    getHero(opts)\n      .then((hero) => {\n        // In case it's subscribed and the component gets unmounted,\n        // then do not try to set the state of the unmounted component\n        isSubscribed && ReactDOM.flushSync(() => setHero(hero));\n      });\n\n    // Ideally, it should cancel the call of the promise, but that isn't supported.\n    // So, we use this isSubscribed variable to control the updating of the state\n    // only when the component is mounted, otherwise the cleaner function will run\n    // and clean it up.\n    return () => { isSubscribed = false; };\n  }, [props.id, props.delay]);\n\n  if (!hero.localized_name) {\n    return <HeroSkeletonLoader />;\n  }\n\n  return <HeroTile hero={hero} />;\n}\n","import React from 'react';\nimport Hero from './Hero';\nimport DELAYS from '../../constants/delays';\n\nexport default function HeroesList (props) {\n  return (\n    <div className='container'>\n      <div className='hero-list'>\n        <Hero\n         id={props.low}\n         delay={DELAYS.HERO_1}\n        />\n        <Hero\n          id={props.low + 1}\n          delay={DELAYS.HERO_2}\n        />\n        <Hero\n          id={props.low + 2}\n          delay={DELAYS.HERO_3}\n        />\n        <Hero\n          id={props.low + 3}\n          delay={DELAYS.HERO_4}\n        />\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport HeroesList from './components/HeroesList';;\n\nfunction SynchronousApp (props) {\n  return (\n    <div className=\"App\">\n      <div className=\"App-title\">\n        Synchronous Mode\n      </div>\n      <HeroesList\n        low={props.pagination.low}\n        high={props.pagination.high}\n      />\n    </div>\n  );\n}\n\nexport default SynchronousApp;\n","import React from 'react';\n\nexport default function Spinner () {\n  return (\n    <div className=\"spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}","import React from 'react';\nimport { getLimits } from '../services/DotaService';\nimport constants from '../constants/constants';\nimport Spinner from './Spinner';\n\nexport default function Pagination (props) {\n\n  function handleLeft () {\n    let limits = getLimits(),\n      low = props.pagination.low - constants.LIST_ITEMS_COUNT,\n      high = props.pagination.high - constants.LIST_ITEMS_COUNT;\n\n    if (low < limits.low) {\n      low = limits.low;\n      high = limits.low + constants.LIST_ITEMS_COUNT;\n    }\n\n    props.onChange({ low, high });\n  }\n\n  function handleRight () {\n    let limits = getLimits(),\n      low = props.pagination.low + constants.LIST_ITEMS_COUNT,\n      high = props.pagination.high + constants.LIST_ITEMS_COUNT;\n\n    if (high > limits.high) {\n      high = limits.high;\n      low = limits.high - constants.LIST_ITEMS_COUNT;\n    }\n\n    props.onChange({ low, high });\n  }\n\n  return (\n    <div className='pagination'>\n      <div\n        className='pagination-btn'\n        onClick={handleLeft}\n      >\n        <svg width=\"32px\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"SOLID BLACK\" viewBox=\"0 0 32 30\" x=\"0px\" y=\"0px\">\n          <path\n            style={{fill: '#FFFFFF'}}\n            d=\"M27,1H5A4,4,0,0,0,1,5V27a4,4,0,0,0,4,4H27a4,4,0,0,0,4-4V5A4,4,0,0,0,27,1ZM21.78,20.38a3,3,0,0,1-1.5,2.6,2.95,2.95,0,0,1-3,0L9.68,18.6a3,3,0,0,1,0-5.2L17.28,9a3,3,0,0,1,4.5,2.6Z\"\n            />\n        </svg>\n      </div>\n      <div\n        className='pagination-btn'\n        onClick={handleRight}\n      >\n        <svg width=\"32px\" xmlns=\"http://www.w3.org/2000/svg\" transform=\"scale(-1, 1)\" data-name=\"SOLID BLACK\" viewBox=\"0 0 32 30\" x=\"0px\" y=\"0px\">\n          <path\n            style={{fill: '#FFFFFF'}}\n            d=\"M27,1H5A4,4,0,0,0,1,5V27a4,4,0,0,0,4,4H27a4,4,0,0,0,4-4V5A4,4,0,0,0,27,1ZM21.78,20.38a3,3,0,0,1-1.5,2.6,2.95,2.95,0,0,1-3,0L9.68,18.6a3,3,0,0,1,0-5.2L17.28,9a3,3,0,0,1,4.5,2.6Z\"\n            />\n        </svg>\n      </div>\n      {\n        props.isPending &&\n          <div className='spinner'>\n            <Spinner />\n          </div>\n      }\n    </div>\n  );\n}","import React from 'react';\nimport classnames from 'classnames';\nimport { SYNC, CONCURRENT } from '../constants/constants';\n\nexport default function Toggle ({ modes, setModes }) {\n  const handleMode = (mode) => {\n      setModes({ ...modes, [mode]: !modes[mode] });\n    },\n    getCheckboxClass = (mode) => {\n      return classnames({\n        'App-header__toggle-menu-item__checkbox': true,\n        'is-enabled': modes[mode]\n      });\n    }\n\n  return (\n    <div className='App-header__toggle-menu'>\n      <div\n        className='App-header__toggle-menu-item'\n        onClick={handleMode.bind(this, SYNC)}>\n        <div className={getCheckboxClass(SYNC)}>\n          { modes[SYNC] && <div className='enabled'/> }\n        </div>\n        <div className='label'>Synchronous Mode</div>\n      </div>\n      <div\n        className='App-header__toggle-menu-item'\n        onClick={handleMode.bind(this, CONCURRENT)}\n      >\n        <div className={getCheckboxClass(CONCURRENT)}>\n          { modes[CONCURRENT] && <div className='enabled'/> }\n        </div>\n        <div className='label'>Concurrent Mode</div>\n      </div>\n    </div>\n  )\n}","import React, { useState, useTransition } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './assets/logo.svg';\nimport './App.scss';\nimport ConcurrentApp from './react-concurrent/ConcurrentApp';\nimport SynchronousApp from './react-synchronous/SynchronousApp';\nimport Pagination from './components/Pagination';\nimport {\n  SYNC,\n  CONCURRENT,\n  LIST_ITEMS_COUNT\n} from './constants/constants';\nimport Toggle from './components/Toggle';\n\nfunction App () {\n  const [pagination, setPagination] = useState({ low: 1, high: LIST_ITEMS_COUNT }),\n    [modes, setModes] = useState({ [SYNC]: true, [CONCURRENT]: false }),\n    [startTransition, isPending] = useTransition({ timeoutMs: 3000 });\n\n  function handlePagination (pagination) {\n    // Demo - when in concurrent mode, we can use the useTransition hook\n    // and wait for the timeout to fire!\n    // Also, gives us the nice `isPending` boolean to be true\n    // using which we can show a loader on the current screen\n    // till the next screen is completely rendered and ready to be committed\n    if (!modes[SYNC] && modes[CONCURRENT]) {\n      startTransition(() => {\n        setPagination(pagination);\n      });\n\n      return;\n    }\n\n    setPagination(pagination);\n  }\n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Toggle\n          modes={modes}\n          setModes={setModes}\n        />\n      </header>\n      <div className=\"App-container\">\n        {\n          modes[SYNC] && <SynchronousApp pagination={pagination} />\n        }\n        {\n          modes[CONCURRENT] && <ConcurrentApp pagination={pagination} />\n        }\n      </div>\n      <Pagination\n        isPending={isPending}\n        pagination={pagination}\n        onChange={handlePagination}\n      />\n    </div>\n  );\n}\n\nconst root = document.getElementById('root');\n\n// The old way to initialize (sync mode)\n// ReactDOM.render(<App />, root);\n\n// This makes React use the Concurrent Mode (async)\nReactDOM.createRoot(root).render(<App />);\n","module.exports = __webpack_public_path__ + \"static/media/logo.425d747d.svg\";"],"sourceRoot":""}